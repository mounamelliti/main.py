from fastapi import FastAPI
from pydantic import BaseModel
from typing import Union 

app=FastAPI()

@app.get("/")
def accueil():
    return {"message": "Bienvenue sur l'API Ecosain üöÄ"}

class Categorie(BaseModel):
  id:Union[int,str]
  nom:str

categories=[]

@app.get("/categories")
def get_categories():
    return categories

class Produit(BaseModel):
  id:Union[int,str]
  nom:str
  prix:float
  pesage:float
  description:str
  ingredients:str
  image:str
  categorie:str
  quantite:int

produits=[
    Produit(id="ES01", nom="D√©tachant pour v√™tements", prix=9, pesage= 200, description="Sp√©cialement con√ßu pour √©liminer les taches de stylo et d'encre, ainsi que les taches de sang, de sueur et de nourriture, avant le lavage. Agiter avant utilisation, puis vaporiser le produit directement sur la tache, laisser agir quelques minutes, frotter puis laver comme d'habitude.", ingrdients="aa", image="image1.jpg", categorie="linge", quantite=10),
    Produit(id="ES02", nom="Meuble en bois", prix= 12, pesage= 200, description="Nettoie et fait briller les meubles en bois. Bien agiter avant utilisation, puis vaporiser le produit sur un chiffon doux et appliquer sur le meuble.", ingredients="aa", image="", cat√©gorie="", quantite=10),
    Produit(id="ES03", nom="D√©sodorisant d'air", prix=7.5 , pesage= 220, description="D√©sodorise, parfume l'atmosph√®re et a des propri√©t√©s relaxantes et apaisantes.Secouez avant utilisation.", ingredients="aa", image="", cat√©gorie="", quantite=10),
    Produit(id="ES04", nom="Vitres et inox", prix=9, pesage= 200, description="Nettoie les vitres et les surfaces en inox, tout en agissant comme un excellent agent anti-traces. Bien agiter avant utilisation. Vaporiser sur les surfaces en verre ou en inox, puis essuyer avec un chiffon en microfibres, du papier journal ou tout autre chiffon non pelucheux.", ingredients="aa", image="", categorie="", quantite=10),
    Produit(id="ES05", nom= "Lessive vaisselle √† la main", prix=18, pesage= 450, description="Nettoie, d√©graisse et d√©sodorise efficacement, tout en √©tant doux pour les mains. Agiter l√©g√®rement avant utilisation, appliquer un peu de liquide sur une √©ponge, puis frotter la vaisselle et rincer √† l'eau.", ingredients="aa", image="", categorie="", quantite=10),
    Produit(id="ES06", nom="D√©tartant WC et salle de bain", prix=15, pesage= 450, description="Nettoie, d√©tartre, parfume, √©limine radicalement les taches tenaces, combat les bact√©ries et fait briller les sanitaires.Appliquer le produit sur les surfaces √† traiter, laisser agir quelques minutes, frotter avec une √©ponge, puis rincer √† l'eau.", ingredients="aa", image="", categorie="", quantite=10),
    Produit(id="ES07", nom="Sol", prix=17.5, pesage=450, description="Nettoie et d√©graisse tous types de rev√™tements de sol. Agiter avant utilisation. Utiliser 2 bouchons de ce produit dans un litre d'eau pour nettoyer tous types de rev√™tements de sol.Conserver dans un endroit frais et sec, √† l'abri de la lumi√®re et hors de port√©e des enfants.", ingredients="aa", image="", categorie="", quantite=10), 
    Produit(id="ES08", nom="Multi-usage", prix=18, pesage= 450, description="Nettoie et √©limine la graisse ainsi que les odeurs sur toutes les surfaces de la cuisine, comme les fours, plans de travail, cuisini√®res, hottes, r√©frig√©rateurs et √©viers. Il est √©galement efficace sur les surfaces de la salle de bain, telles que les lavabos, les robinets, etc. Bien agiter avant utilisation. Vaporiser sur la surface √† traiter, laisser agir une minute, puis essuyer avec un chiffon ou frotter avec une √©ponge et rincer.Conserver dans un endroit frais et sec, √† l'abri de la lumi√®re et hors de port√©e des enfants.", ingredients="aa", image="", categorie="", quantite=10),
    Produit(id="ES09", nom="Poudre linge blanc", prix=11, pesage= 300, description="Nettoie, adoucit, d√©graisse, d√©sodorise et blanchit le linge blanc. Ajoutez 1 √† 4 cuill√®res √† soupe de poudre selon la capacit√© de votre machine √† laver et le degr√© de salissure de votre linge. Effectuez votre lessive √† une temp√©rature de 60 ¬∞C.Conserver dans un endroit frais et sec, √† l'abri de la lumi√®re et hors de port√©e des enfants.", ingredients="aa", image="", categorie="", quantite=10),
    Produit(id="ES010", nom="D√©sodorisant tapis/canap√©s/moquettes", prix=12, pesage=350, description="D√©sodorisant sec pour tapis, canap√©s et moquettes. Versez la poudre sur toutes les surfaces √† d√©sodoriser, laissez agir 2 heures ou plus, puis frottez et passez l'aspirateur pour √©liminer la poudre.Conserver dans un endroit frais et sec, √† l'abri de la lumi√®re et hors de port√©e des enfants.", ingredients="aa", image="", categorie="", quantite=10),
    Produit(id="ES011", nom="Poudre vaisselle machine", prix=12, pesage= 300, description="Nettoie, d√©graisse et d√©sodorise la vaisselle, √©vite les traces et lutte contre le calcaire. Remplissez le compartiment √† d√©tergent de votre lave-vaisselle jusqu'au rep√®re, conform√©ment aux instructions du fabricant.Conserver dans un endroit frais et sec, √† l'abri de la lumi√®re et hors de port√©e des enfants.", ingredients="aa", image="", categorie="", quantite=10),
    Produit(id="ES012", nom="Poudre linge machine", prix=11 , pesage= 300, description="Nettoie, adoucit, d√©graisse et d√©sodorise le linge. Ajoutez 1 √† 4 cuill√®res √† soupe de poudre selon la capacit√© de votre machine √† laver et le degr√© de salissure de votre linge. Ex√©cutez votre routine de lessive comme d'habitude. Conserver dans un endroit frais et sec, √† l'abri de la lumi√®re et hors de port√©e des enfants.", ingredients="aa", image="", categorie="", quantite=10),
    ]

@app.get("/Produits")
def get_Produits():
    return Produits

class Client(BaseModel):
  nom:str
  prenom:str
  email:str
  num√©ro_t√©l:int
  adresse:str
  mot_de_passe:str

clients=[]

@app.get("/Clients")
def get_Clients():
    return Clients

from enum import Enum

class StatutCommande(str, Enum):
    en_cours = "en cours"
    confirm√©e = "confirm√©e"
    livr√©e = "livr√©e"
    annul√©e = "annul√©e"

@app.put("/commandes/{id}/statut")
def modifier_statut_commande(id: Union[int,str], nouveau_statut: StatutCommande):
    for c in commandes:
        if c.id == id:
            c.statut = nouveau_statut
            return {"message": f"Statut de la commande {id} mis √† jour ‚úÖ", "statut": c.statut}
    return {"message": "Commande non trouv√©e ‚ùå"}

# Liste des produits disponibles avec leurs prix
produits_catalogue = {
    1: 10.0,
    2: 15.5,
    3: 8.75,
    4: 12.0,
    5: 20.0
}

class Commande(BaseModel):
  id: Union[int,str]          #id commande
  client_id:int   #identifiant du client qui a command√©
  produits:list[int]   #liste des produits command√©s
  statut: StatutCommande  #statut de la commande(encours de pr√©paration, exp√©di√©)
  total:float=0.0

commandes=[]

#voir toutes les commandes
@app.get("/commandes")
def get_commandes():
    return commandes

#voir une commande sp√©cifique par id
@app.get("/commandes/{id}")
def get_commande(id: Union[int,str]):
    for c in commandes:
        if c.id == id:
            return c
    return {"message": "Commande non trouv√©e ‚ùå"}

# Calcul automatique du total
@app.post("/commandes")
def ajouter_commande(commande: Commande):
    total = 0.0
    for pid in commande.produits:
        if pid in produits_catalogue:
            total += produits_catalogue[pid]
        else:
            return {"message": f"Produit ID {pid} introuvable ‚ùå"}

# Remplacer total dans la commande (tu peux aussi le recalculer)
    commande.total = total
    commandes.append(commande)
    return {"message": "Commande ajout√©e avec total calcul√© ‚úÖ","total": total}

class Panier(BaseModel):
   client_id: Union[int,str]
   produits:list[int]

panier=[]

#voir tous les paniers
@app.get("/panier")
def get_panier():
    return panier

#voir le panier d'un client
@app.get("/panier/{client_id}")
def get_panier_client(client_id: Union[int,str]):
    for p in panier:
        if p.client_id == client_id:
            return p
    return {"message": "Aucun panier trouv√© pour ce client ‚ùå"}

#ajouter/modifier le panier
@app.put("/panier")
def modifier_panier(nouveau_panier: Panier):
    for i, p in enumerate(panier):  #Parcourt tous les paniers
        if p.client_id == nouveau_panier.client_id:
            panier[i] = nouveau_panier  #Mise √† jour si client existe
            return {"message": "Panier mis √† jour ‚úÖ"}
    panier.append(nouveau_panier)  #Ajout si client non trouv√©
    return {"message": "Nouveau panier ajout√© ‚úÖ"}

#supprimer un panier
@app.delete("/panier/{client_id}")
def supprimer_panier(client_id: Union[int,str]):
    for i, p in enumerate(panier):
        if p.client_id == client_id:
            del panier[i]
            return {"message": f"Panier du client {client_id} supprim√© ‚úÖ"}
    return {"message": "Aucun panier trouv√© pour ce client ‚ùå"}

class Paiement(BaseModel):
  id:int
  commande:int
  montant:float
  mode:str
  date:str

paiements=[]

@app.get("/paiements")
def get_paiements():
    return paiements

class Livraison(BaseModel):
  id:int
  avenue:str
  ville:str
  Gouvernement:str
  code_postal:int
  commande:int

livraisons=[]

@app.get("/livraisons")
def get_livraisons():
  return livraisons

@app.post("/livraisons")
def ajouter_livraison(livraison: Livraison):
    livraisons.append(livraison)
    return {"message": "Livraison ajout√©e ‚úÖ"}
